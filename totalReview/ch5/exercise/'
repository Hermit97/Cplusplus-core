#include <iostream>
#include "error.h"
#include <cmath>
#include <stdexcept>

//positive
std::string neg_root = "No real discriminants";
double q_pos(double b, double a, double c){
  //put in a error check for b2 - 4ac if its less than zero make sure it fails
  //double formula = -b + (sqrt((b*b) - 4 * (a * c)));
  double squared = b * b;
  double end = a * c;
  double inside = squared - 4 * end;
  if(inside < 0)
    error(neg_root);
  return inside;
}

//negative
double q_neg(double b, double a, double c){
  //put in a error check for b2 - 4ac if its less than zero make sure it fails
  //double formula = -b + (sqrt((b*b) - 4 * (a * c)));
  double squared = b * b;
  double end = a * c;
  double inside = squared - 4 * end;
  if(inside < 0)
    error(neg_root);
  return inside;
}
//Where are you adding the opposite coefficient with the discriminants???? in main??

double numerator(double b){
  double opposite_coefficient = -b;
  return opposite_coefficient;
}

int main(){
  double a, b, c, num_pos, num_neg;
  std::cout << "Enter a b c\n";
  std::cin >> b >> a >> c;
  try{
  double quad_neg = q_neg(b, a, c);
  souble quad_post = q_pos(b, a, c)
  num_neg = numerator(b) + std::sqrt(quad_neg);
  num_pos = numerator(b) + std::sqrt(quad_pos));
  double result_pos = num_pos / (2 * a);
  //double result_neg = num_pos / (2 * a);

  std::cout << result_pos << "\n";
  //std::cout << result_neg << "\n";
  }
  catch(std::runtime_error& e){
    std::cerr << "Runtime error: " << e.what() << '\n';
  }
}
