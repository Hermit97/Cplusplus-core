 Why is feature creep a bad idea?
 -It exands the projects borders far to wide making it difficult to realistically complete.

 What are the three main phases of software development?
 - Analysis
 - Design
 - Implementation

 What is a “use case”?
 - Use cases are practical definitions of what the program should do.

 What is the purpose of testing?
 - Testing brings you feedback on your programs performance.

According to the outline in the chapter, describe the difference between a
Term , an Expression , a Number , and a Primary .
 - Terms are values that are going to be used for mathmatical stuff.
 - Expressions are built by using variables operations and integer constants.
 - Number is an arithmetic value.
 - Primary is a number.

 In the chapter, an input was broken down into its component Term s, Ex-
pression s, Primary s, and Number s. Do this for (17+4)/(5 – 1) .
 - The whole thing is an expression. The numbers are primarys, along with the parentheses.
 17 etc are numbers. 17+4 are terms.

 Why does the program not have a function called number() ?
 - Primary() takes care of the number values, so theirs no need for a number() function.

 What is a token?
 - A token is a series of character's that represent something.

 What is a grammar? A grammar rule?
 - Structure of a language, Rules that the grammar must follow.

 What is a class? What do we use classes for?
  -Classes are user defined types.

 How can we provide a default value for a member of a class?
 - class example {};

 In the expression function, why is the default for the switch -statement to
“put back” the token?
 - If the term isint + or - then its put back into the stream.

17. What is “look-ahead”?
 - Look ahead in the expression past the current or next token.

18. What does putback() do and why is it useful?
 - It puts the current token in the buffer back into the token stream.

19. Why is the remainder (modulus) operation, % , difficult to implement in
the term() ?
 - It cant be applied to doubles or floating literals.

20. What do we use the two data members of the Token class for?
 - Kind checks the kind of token it is.
 - Value checks the value of a number.

21. Why do we (sometimes) split a class’s members into private and public
members?
 - Users use the members in the public interface. Its avalible for them to use for implementatoin etc.
 - Private contains what is nesessary for for the public members to be implemented. This includes functions and data that the user doesn't need to know about.

22. What happens in the Token_stream class when there is a token in the
buffer and the get() function is called?
 - It removies the current token in the buffer. Then returns the now empty buffer.

23. Why were the ';' and 'q' characters added to the switch -statement in the
get() function of the Token_stream class?
 - They are tokens that should be identified when they are identified in the buffer.

24. When should we start testing our program?
 - You should build a small part of it and begin testing. This could be when you build the token stream buffer and test if the steam is reading cin and putting them into the buffer for example.

25. What is a “user-defined type”? Why would we want one?
 - It allows you to create your own types. For this case you would want a token type that holds information about our tokens (kind, value).

26. What is the interface to a C++ “user-defined type”?
 - public and private, they hold information in an organized manner.

27. Why do we want to rely on libraries of code?
 - It makes it easierk to implement our solution to a problem. Majority of the time someone else has already implemented a solution and made a library for it and its not always efficent to re invent the wheel when someone has already dont it for you.
